/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _xmlAst = __webpack_require__(1);\n\nvar _xmlAst2 = _interopRequireDefault(_xmlAst);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nwindow.onload = function () {\n  var ast = new _xmlAst2.default();\n  var a = ast.ast('<aa/><img>');\n  console.log(a);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvaW5kZXguanM/YmM2NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFFQSxPQUFPLE1BQVAsR0FBZ0IsWUFBWTtBQUMxQixNQUFJLE1BQU0sc0JBQVY7QUFDQSxNQUFJLElBQUksSUFBSSxHQUFKLENBQVEsWUFBUixDQUFSO0FBQ0EsVUFBUSxHQUFSLENBQVksQ0FBWjtBQUNELENBSkQiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBYbWxBc3QgZnJvbSAnLi9tb2R1bGVzL3htbEFzdCc7XG5cbndpbmRvdy5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gIGxldCBhc3QgPSBuZXcgWG1sQXN0KCk7XG4gIGxldCBhID0gYXN0LmFzdCgnPGFhLz48aW1nPicpO1xuICBjb25zb2xlLmxvZyhhKVxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2pzL2luZGV4LmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _error = __webpack_require__(2);\n\nvar _error2 = _interopRequireDefault(_error);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar xmlParseMinErr = (0, _error2.default)('XmlAst');\n\nvar NODE_TYPE_ELEMENT = 1;\nvar NODE_TYPE_TEXT = 3;\nvar NODE_TYPE_COMMENT = 8;\nvar NODE_TYPE_DOCUMENT = 9;\nvar NODE_TYPE_DOCUMENTFRAGMENT = 11;\n\nvar ODD_TAG_LIST = ['img', 'input', 'br', 'hr', 'param', 'meta', 'link'];\n\nvar XmlAst = function () {\n  function XmlAst() {\n    _classCallCheck(this, XmlAst);\n  }\n\n  _createClass(XmlAst, [{\n    key: 'ast',\n    value: function ast(text) {\n      this.text = text;\n      this.length = text.length;\n      this.index = 0;\n      this.rowIndex = 0;\n      this.rowCharIndex = 0;\n      this.nodeTree = [];\n      return this.fragment();\n    }\n  }, {\n    key: 'fragment',\n    value: function fragment() {\n      var EMPTY_REG_STRING = '[\\\\n\\\\t\\\\r\\\\v\\\\s]';\n      var ALL_RGE_STRING = '.|' + EMPTY_REG_STRING;\n      var TAG_OR_PROPERTY_REG_STRING = '[^\\\\\\\\/<>\\\\n\\\\t\\\\r\\\\v\\\\s]+';\n      var TAG_ATTRIBUTE_VALUE_REG_STRING = '=\"[^\"]*\"|=\\'[^\\']*\\'|=[^\\\\s><]+';\n      var TAG_ATTRIBUTE_REG_STRING = EMPTY_REG_STRING + '+' + TAG_OR_PROPERTY_REG_STRING + '(?:' + TAG_ATTRIBUTE_VALUE_REG_STRING + ')?';\n      var TAG_CLOSE_REG_STRING = '</' + TAG_OR_PROPERTY_REG_STRING + EMPTY_REG_STRING + '*>';\n\n      var TEST_TAG_REG = new RegExp('^<' + TAG_OR_PROPERTY_REG_STRING + EMPTY_REG_STRING + '*/?>|^<' + TAG_OR_PROPERTY_REG_STRING + '(?:' + TAG_ATTRIBUTE_REG_STRING + ')+' + EMPTY_REG_STRING + '*/?>|^</' + TAG_OR_PROPERTY_REG_STRING + EMPTY_REG_STRING + '*>');\n\n      var fragment = {\n        nodeType: NODE_TYPE_DOCUMENTFRAGMENT,\n        childNodes: []\n      };\n      this.ignoreEmpty();\n\n      var parent = fragment;\n      while (this.index < this.length) {\n        var ch = this.text.charAt(this.index);\n        if (ch == '<') {\n          if (this.expect('<!--')) {\n            var comment = this.readComment();\n            comment.parentNode = parent;\n            parent.childNodes.push(comment);\n          } else if (TEST_TAG_REG.test(this.later())) {\n            var tag = this.readTag();\n\n            if (tag.closeTag && !tag.beginTag) {\n              var beginTag = this.nodeTree.pop();\n              if (!beginTag) {\n                throw xmlParseMinErr('lexer', '文档第{0}行第{1}位`<{2}>`标签错误，未开始的标签不闭合！', this.rowIndex, tag.startIndex - this.rowCharIndex, tag.tagName);\n              }\n              if (beginTag != tag.tagName) {\n                throw xmlParseMinErr('lexer', '文档第{0}行第{1}位标签`<{2}>`未匹配正确的开始标签！', this.rowIndex, tag.startIndex - this.rowCharIndex, tag.tagName);\n              } else {\n                parent = parent.parentNode;\n              }\n            } else {\n\n              if (tag.beginTag && tag.closeTag) {\n                tag.parentNode = parent;\n                parent.childNodes.push(tag);\n              } else {\n                this.nodeTree.push(tag.tagName);\n                tag.parentNode = parent;\n                parent.childNodes.push(tag);\n                if (tag.beginTag) {\n                  tag.childNodes = [];\n                  parent = tag;\n                  if (/^(script|style)$/i.test(tag.tagName)) {\n                    var ele = this.readScriptOrStyle(tag.tagName);\n                    if (ele) {\n                      tag.childNodes.push(ele);\n                    }\n                  }\n                }\n              }\n            }\n          } else {\n            parent.childNodes.push(this.readText());\n          }\n        } else {\n          parent.childNodes.push(this.readText());\n        }\n      }\n      if (this.nodeTree.length) {\n        throw xmlParseMinErr('fragment', '文档结尾`<{0}>`标签未闭合！', this.nodeTree.join('`>,<`'));\n      }\n      return fragment;\n    }\n  }, {\n    key: 'readScriptOrStyle',\n    value: function readScriptOrStyle(tagName) {\n      var startIndex = this.index;\n      var startRowIndex = this.rowIndex;\n      var later = this.later();\n      var endIndex = later.search(new RegExp('</' + tagName + '(.|[\\\\n\\\\t\\\\r\\\\v\\\\s])*>'));\n      if (endIndex == -1) {\n        throw xmlParseMinErr('readScriptOrStyle', '第{0}行第{1}位的{2}标签未关闭！', this.rowIndex, this.index - this.rowCharIndex, tagName.toLowerCase());\n      }\n      var text = later.substring(0, endIndex);\n      var rowSize = text.match(/\\r\\n|\\r|\\n/g);\n      if (rowSize) {\n        this.rowIndex += rowSize.length;\n      }\n      this.index += endIndex;\n      return {\n        startIndex: startIndex,\n        endIndex: this.index,\n        startRowIndex: startRowIndex,\n        endRowIndex: this.rowIndex,\n        nodeType: NODE_TYPE_TEXT,\n        text: text\n      };\n    }\n  }, {\n    key: 'readComment',\n    value: function readComment() {\n      var startIndex = this.index;\n      var startRowIndex = this.rowIndex;\n      this.index += 4;\n      var later = this.later();\n      var endIndex = later.indexOf('-->');\n      if (endIndex == -1) {\n        endIndex = later.length;\n      }\n      var text = later.substring(0, endIndex);\n      var rowSize = text.match(/\\r\\n|\\r|\\n/g);\n      if (rowSize) {\n        this.rowIndex += rowSize.length;\n      }\n      this.index = this.index + endIndex;\n      if (this.peek()) {\n        this.index += 3;\n      }\n      return {\n        startIndex: startIndex,\n        endIndex: this.index,\n        startRowIndex: startRowIndex,\n        endRowIndex: this.rowIndex,\n        nodeType: NODE_TYPE_COMMENT,\n        text: text\n      };\n    }\n  }, {\n    key: 'readText',\n    value: function readText() {\n      var startRowIndex = this.rowIndex;\n      var startIndex = this.index;\n      var text = '';\n      while (this.index < this.length) {\n        var ch = this.text.charAt(this.index);\n        if (this.isEmpty(ch)) {\n          text += this.ignoreEmpty();\n        } else if (ch != '<') {\n          text += ch;\n          this.index++;\n        } else {\n          break;\n        }\n      }\n      return {\n        startRowIndex: startRowIndex,\n        endRowIndex: this.rowIndex,\n        startIndex: startIndex,\n        endIndex: this.index,\n        nodeType: NODE_TYPE_TEXT,\n        text: text\n      };\n    }\n  }, {\n    key: 'readTag',\n    value: function readTag() {\n      var startRowIndex = this.rowIndex;\n      var startIndex = this.index;\n      var TEST_ODD_TAG_REG = new RegExp('^' + ODD_TAG_LIST.join('|') + '$');\n\n      var tagName = '';\n      var propertis = void 0;\n      var ch = void 0;\n      this.index++;\n      while (this.index < this.length) {\n        ch = this.text.charAt(this.index);\n\n        if (!this.isEmpty(ch)) {\n          if (ch == '>' || ch == '/' && this.peek() == '>') {\n            break;\n          }\n          tagName += ch;\n          this.index++;\n        } else {\n          propertis = this.readProperty();\n        }\n      }\n      var tag = {\n        startRowIndex: startRowIndex,\n        endRowIndex: this.rowIndex,\n        startIndex: startIndex,\n        endIndex: this.index,\n        nodeType: NODE_TYPE_ELEMENT,\n        tagName: tagName,\n        propertis: propertis || []\n      };\n      if (ch == '/') {\n        this.index += 2;\n        tag.endIndex += 2;\n        tag.beginTag = true;\n        tag.closeTag = true;\n      } else if (ch == '>') {\n        if (TEST_ODD_TAG_REG.test(tag.tagName)) {\n          tag.closeTag = true;\n          tag.beginTag = true;\n        } else if (tagName.charAt(0) == '/') {\n          tag.closeTag = true;\n          tag.tagName = tagName.substring(1, tagName.length);\n        } else {\n          tag.beginTag = true;\n        }\n        this.index++;\n        tag.endIndex++;\n      } else {\n        throw xmlParseMinErr('regTag', '文档第{0}行第{1}位标签未正确关闭！', this.rowIndex, this.index - this.rowCharIndex);\n      }\n      return tag;\n    }\n  }, {\n    key: 'readProperty',\n    value: function readProperty() {\n      var propertis = [];\n      while (this.index < this.length) {\n        this.ignoreEmpty();\n        var startRowIndex = this.rowIndex;\n        var startIndex = this.index;\n        var ch = this.text.charAt(this.index);\n        if (ch == '>' || ch == '/' && this.peek() == '>') {\n          break;\n        }\n        var property = {\n          name: this.readPropertyKey()\n        };\n        ch = this.text.charAt(this.index);\n        if (ch == '=') {\n          if (!this.isEmpty(this.peek())) {\n            property.value = this.readPropertyValue();\n          }\n        }\n        property.startRowIndex = startRowIndex;\n        property.endRowIndex = this.rowIndex;\n        property.startIndex = startIndex;\n        property.endIndex = this.index;\n        propertis.push(property);\n      }\n      return propertis;\n    }\n  }, {\n    key: 'readPropertyKey',\n    value: function readPropertyKey() {\n      var key = '';\n      while (this.index < this.length) {\n        var ch = this.text.charAt(this.index);\n        if (!this.isEmpty(ch) && ch != '=' && ch != '>') {\n          if (ch == '/' && this.peek() == '>') {\n            break;\n          }\n          key += ch;\n          this.index++;\n        } else {\n          break;\n        }\n      }\n      return key;\n    }\n  }, {\n    key: 'readPropertyValue',\n    value: function readPropertyValue() {\n      var value = '';\n      var escape = false;\n      var quote = this.peek();\n      if (quote == '\"' || quote == \"'\") {\n        this.index++;\n      }\n      this.index++;\n      while (this.index < this.length) {\n        var ch = this.text.charAt(this.index);\n        if (quote != '\"' && quote != \"'\" && this.isEmpty(ch)) {\n          return value;\n        }\n        if (escape) {\n          if (ch === 'u') {\n            var hexCode = this.text.substring(this.index + 1, this.index + 5);\n            if (/[\\da-f]{4}/i.test(hexCode)) {\n              value += String.fromCharCode(parseInt(hexCode, 16));\n              this.index += 4;\n            } else {\n              throw xmlParseMinErr('readPropertyValue', '转义\\\\{0}失败，或者\\\\{0}不是一个合法的nuicode字符', hexCode);\n            }\n          } else {\n            this.index--;\n            value += this.ignoreEmpty();\n          }\n          escape = false;\n        } else if (ch == '\\\\') {\n          escape = true;\n        } else if (ch == quote && ch == '\"' || ch == \"'\") {\n          this.index++;\n          return value;\n        } else {\n          value += ch;\n        }\n        this.index++;\n      }\n    }\n  }, {\n    key: 'later',\n    value: function later() {\n      return this.text.slice(this.index, this.length);\n    }\n  }, {\n    key: 'expect',\n    value: function expect(text) {\n      var entIndex = this.index + text.length;\n      return entIndex <= this.length ? text === this.text.slice(this.index, entIndex) : false;\n    }\n  }, {\n    key: 'isEmpty',\n    value: function isEmpty(text) {\n      return typeof text !== 'string' || text === ' ' || text === '\\n' || text === '\\r' || text === '\\t' || text === '\\v' || text === ' ';\n    }\n  }, {\n    key: 'ignoreEmpty',\n    value: function ignoreEmpty() {\n      var empty = '';\n      while (this.index < this.length) {\n        var ch = this.text.charAt(this.index);\n\n        if (!this.isEmpty(ch)) {\n          break;\n        }\n        empty += ch;\n        this.index++;\n\n        if (ch == '\\r') {\n          // Mac OS\n          if (this.peek() == '\\n') {\n            // linux,unix\n            this.index++;\n          }\n          this.rowIndex++;\n          this.rowCharIndex = this.index;\n        } else if (ch == '\\n') {\n          // windows\n          this.rowIndex++;\n          this.rowCharIndex = this.index;\n        }\n      }\n      return empty;\n    }\n  }, {\n    key: 'peek',\n    value: function peek() {\n      var index = this.index + 1;\n      return index < this.length ? this.text.charAt(index) : false;\n    }\n  }]);\n\n  return XmlAst;\n}();\n\nexports.default = XmlAst;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 2 */
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = minErr;\nfunction minErr(module) {\n  return function (code, template) {\n    for (var _len = arguments.length, info = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      info[_key - 2] = arguments[_key];\n    }\n\n    var msg = '[' + (module ? module + ':' : '') + code + ']  ';\n    msg += template.replace(/\\{(\\d+)\\}/g, function (str, $1) {\n      return info[+$1] ? info[+$1] : str;\n    });\n\n    msg += '\\nhttp://www.TBjs.org?module=' + module + '&type=' + code;\n    return new Error(msg);\n  };\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvbW9kdWxlcy9lcnJvci5qcz8wNjVjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O2tCQUF3QixNO0FBQVQsU0FBUyxNQUFULENBQWdCLE1BQWhCLEVBQXdCO0FBQ3JDLFNBQU8sVUFBVSxJQUFWLEVBQWdCLFFBQWhCLEVBQW1DO0FBQUEsc0NBQU4sSUFBTTtBQUFOLFVBQU07QUFBQTs7QUFDeEMsUUFBSSxNQUFNLE9BQU8sU0FBUyxTQUFTLEdBQWxCLEdBQXdCLEVBQS9CLElBQXFDLElBQXJDLEdBQTRDLEtBQXREO0FBQ0EsV0FBTyxTQUFTLE9BQVQsQ0FBaUIsWUFBakIsRUFBK0IsVUFBVSxHQUFWLEVBQWUsRUFBZixFQUFtQjtBQUN2RCxhQUFPLEtBQUssQ0FBQyxFQUFOLElBQVksS0FBSyxDQUFDLEVBQU4sQ0FBWixHQUF3QixHQUEvQjtBQUNELEtBRk0sQ0FBUDs7QUFJQSxXQUFPLGtDQUFrQyxNQUFsQyxHQUEyQyxRQUEzQyxHQUFzRCxJQUE3RDtBQUNBLFdBQU8sSUFBSSxLQUFKLENBQVUsR0FBVixDQUFQO0FBQ0QsR0FSRDtBQVNEIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtaW5FcnIobW9kdWxlKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoY29kZSwgdGVtcGxhdGUsIC4uLmluZm8pIHtcbiAgICBsZXQgbXNnID0gJ1snICsgKG1vZHVsZSA/IG1vZHVsZSArICc6JyA6ICcnKSArIGNvZGUgKyAnXSAgJztcbiAgICBtc2cgKz0gdGVtcGxhdGUucmVwbGFjZSgvXFx7KFxcZCspXFx9L2csIGZ1bmN0aW9uIChzdHIsICQxKSB7XG4gICAgICByZXR1cm4gaW5mb1srJDFdID8gaW5mb1srJDFdIDogc3RyO1xuICAgIH0pXG5cbiAgICBtc2cgKz0gJ1xcbmh0dHA6Ly93d3cuVEJqcy5vcmc/bW9kdWxlPScgKyBtb2R1bGUgKyAnJnR5cGU9JyArIGNvZGU7XG4gICAgcmV0dXJuIG5ldyBFcnJvcihtc2cpO1xuICB9XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9qcy9tb2R1bGVzL2Vycm9yLmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ }
/******/ ]);
