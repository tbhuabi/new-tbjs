/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _htmlParser = __webpack_require__(1);\n\nvar _htmlParser2 = _interopRequireDefault(_htmlParser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nwindow.onload = function () {\n    var htmlParser = new _htmlParser2.default();\n    debugger;\n    var a = htmlParser.parse('<aa/><img>');\n    console.log(a);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvaW5kZXguanM/YmM2NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFFQSxPQUFPLE1BQVAsR0FBZ0IsWUFBWTtBQUN4QixRQUFJLGFBQWEsMEJBQWpCO0FBQ0E7QUFDQSxRQUFJLElBQUksV0FBVyxLQUFYLENBQWlCLFlBQWpCLENBQVI7QUFDQSxZQUFRLEdBQVIsQ0FBWSxDQUFaO0FBQ0gsQ0FMRCIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEh0bWxQYXJzZXIgZnJvbSAnLi9tb2R1bGVzL2h0bWxQYXJzZXInO1xuXG53aW5kb3cub25sb2FkID0gZnVuY3Rpb24gKCkge1xuICAgIGxldCBodG1sUGFyc2VyID0gbmV3IEh0bWxQYXJzZXIoKTtcbiAgICBkZWJ1Z2dlcjtcbiAgICBsZXQgYSA9IGh0bWxQYXJzZXIucGFyc2UoJzxhYS8+PGltZz4nKTtcbiAgICBjb25zb2xlLmxvZyhhKVxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2pzL2luZGV4LmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _xmlAst = __webpack_require__(2);\n\nvar _xmlAst2 = _interopRequireDefault(_xmlAst);\n\nvar _virtualDom = __webpack_require__(5);\n\nvar _virtualDom2 = _interopRequireDefault(_virtualDom);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar HtmlParser = function () {\n    function HtmlParser() {\n        _classCallCheck(this, HtmlParser);\n    }\n\n    _createClass(HtmlParser, [{\n        key: 'parse',\n        value: function parse(text) {\n            this.text = text;\n            this.ast = _xmlAst2.default;\n            this.fragment = new _xmlAst2.default().ast(text);\n            this.virtualDom = new _virtualDom2.default();\n            return this.compile();\n        }\n    }, {\n        key: 'compile',\n        value: function compile() {\n            debugger;\n            console.log('aaa');\n        }\n    }]);\n\n    return HtmlParser;\n}();\n\nexports.default = HtmlParser;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvbW9kdWxlcy9odG1sUGFyc2VyLmpzPzM3YWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7Ozs7OztJQUVxQixVOzs7Ozs7OzhCQUNYLEksRUFBTTtBQUNSLGlCQUFLLElBQUwsR0FBWSxJQUFaO0FBQ0EsaUJBQUssR0FBTDtBQUNBLGlCQUFLLFFBQUwsR0FBZ0IsdUJBQWEsR0FBYixDQUFpQixJQUFqQixDQUFoQjtBQUNBLGlCQUFLLFVBQUwsR0FBa0IsMEJBQWxCO0FBQ0EsbUJBQU8sS0FBSyxPQUFMLEVBQVA7QUFDSDs7O2tDQUNTO0FBQ047QUFDQSxvQkFBUSxHQUFSLENBQVksS0FBWjtBQUNIOzs7Ozs7a0JBWGdCLFUiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBYbWxBc3QgZnJvbSAnLi94bWxBc3QnO1xuaW1wb3J0IERvY3VtZW50RWxlbWVudCBmcm9tICcuL3ZpcnR1YWxEb20nO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBIdG1sUGFyc2VyIHtcbiAgICBwYXJzZSh0ZXh0KSB7XG4gICAgICAgIHRoaXMudGV4dCA9IHRleHQ7XG4gICAgICAgIHRoaXMuYXN0ID0gWG1sQXN0O1xuICAgICAgICB0aGlzLmZyYWdtZW50ID0gbmV3IFhtbEFzdCgpLmFzdCh0ZXh0KTtcbiAgICAgICAgdGhpcy52aXJ0dWFsRG9tID0gbmV3IERvY3VtZW50RWxlbWVudCgpO1xuICAgICAgICByZXR1cm4gdGhpcy5jb21waWxlKCk7XG4gICAgfVxuICAgIGNvbXBpbGUoKSB7XG4gICAgICAgIGRlYnVnZ2VyO1xuICAgICAgICBjb25zb2xlLmxvZygnYWFhJylcbiAgICB9XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9qcy9tb2R1bGVzL2h0bWxQYXJzZXIuanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _error = __webpack_require__(3);\n\nvar _error2 = _interopRequireDefault(_error);\n\nvar _variables = __webpack_require__(4);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar xmlParseMinErr = (0, _error2.default)('XmlAst');\n\nvar ODD_TAG_LIST = ['img', 'input', 'br', 'hr', 'param', 'meta', 'link'];\n\nvar XmlAst = function () {\n    function XmlAst() {\n        _classCallCheck(this, XmlAst);\n    }\n\n    _createClass(XmlAst, [{\n        key: 'ast',\n        value: function ast(text) {\n            this.text = text;\n            this.length = text.length;\n            this.index = 0;\n            this.rowIndex = 0;\n            this.rowCharIndex = 0;\n            this.nodeTree = [];\n            return this.fragment();\n        }\n    }, {\n        key: 'fragment',\n        value: function fragment() {\n            var EMPTY_REG_STRING = '[\\\\n\\\\t\\\\r\\\\v\\\\s]';\n            var TAG_OR_PROPERTY_REG_STRING = '[^\\\\\\\\/<>\\\\n\\\\t\\\\r\\\\v\\\\s]+';\n            var TAG_ATTRIBUTE_VALUE_REG_STRING = '=\"[^\"]*\"|=\\'[^\\']*\\'|=[^\\\\s><]+';\n            var TAG_ATTRIBUTE_REG_STRING = EMPTY_REG_STRING + '+' + TAG_OR_PROPERTY_REG_STRING + '(?:' + TAG_ATTRIBUTE_VALUE_REG_STRING + ')?';\n\n            var TEST_TAG_REG = new RegExp('^<' + TAG_OR_PROPERTY_REG_STRING + EMPTY_REG_STRING + '*/?>|^<' + TAG_OR_PROPERTY_REG_STRING + '(?:' + TAG_ATTRIBUTE_REG_STRING + ')+' + EMPTY_REG_STRING + '*/?>|^</' + TAG_OR_PROPERTY_REG_STRING + EMPTY_REG_STRING + '*>');\n\n            var fragment = {\n                nodeType: _variables.NODE_TYPE_DOCUMENTFRAGMENT,\n                childNodes: []\n            };\n            this.ignoreEmpty();\n\n            var parent = fragment;\n            while (this.index < this.length) {\n                var ch = this.text.charAt(this.index);\n                if (ch == '<') {\n                    if (this.expect('<!--')) {\n                        var comment = this.readComment();\n                        comment.parentNode = parent;\n                        parent.childNodes.push(comment);\n                    } else if (TEST_TAG_REG.test(this.later())) {\n                        var tag = this.readTag();\n\n                        if (tag.closeTag && !tag.beginTag) {\n                            var beginTag = this.nodeTree.pop();\n                            if (!beginTag) {\n                                throw xmlParseMinErr('lexer', '文档第{0}行第{1}位`<{2}>`标签错误，未开始的标签不闭合！', this.rowIndex, tag.startIndex - this.rowCharIndex, tag.tagName);\n                            }\n                            if (beginTag != tag.tagName) {\n                                throw xmlParseMinErr('lexer', '文档第{0}行第{1}位标签`<{2}>`未匹配正确的开始标签！', this.rowIndex, tag.startIndex - this.rowCharIndex, tag.tagName);\n                            } else {\n                                parent = parent.parentNode;\n                            }\n                        } else {\n\n                            if (tag.beginTag && tag.closeTag) {\n                                tag.parentNode = parent;\n                                parent.childNodes.push(tag);\n                            } else {\n                                this.nodeTree.push(tag.tagName);\n                                tag.parentNode = parent;\n                                parent.childNodes.push(tag);\n                                if (tag.beginTag) {\n                                    tag.childNodes = [];\n                                    parent = tag;\n                                    if (/^(script|style)$/i.test(tag.tagName)) {\n                                        var ele = this.readScriptOrStyle(tag.tagName);\n                                        if (ele) {\n                                            tag.childNodes.push(ele);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    } else {\n                        parent.childNodes.push(this.readText());\n                    }\n                } else {\n                    parent.childNodes.push(this.readText());\n                }\n            }\n            if (this.nodeTree.length) {\n                throw xmlParseMinErr('fragment', '文档结尾`<{0}>`标签未闭合！', this.nodeTree.join('`>,<`'));\n            }\n            return fragment;\n        }\n    }, {\n        key: 'readScriptOrStyle',\n        value: function readScriptOrStyle(tagName) {\n            var startIndex = this.index;\n            var startRowIndex = this.rowIndex;\n            var later = this.later();\n            var endIndex = later.search(new RegExp('</' + tagName + '(.|[\\\\n\\\\t\\\\r\\\\v\\\\s])*>'));\n            if (endIndex == -1) {\n                throw xmlParseMinErr('readScriptOrStyle', '第{0}行第{1}位的{2}标签未关闭！', this.rowIndex, this.index - this.rowCharIndex, tagName.toLowerCase());\n            }\n            var text = later.substring(0, endIndex);\n            var rowSize = text.match(/\\r\\n|\\r|\\n/g);\n            if (rowSize) {\n                this.rowIndex += rowSize.length;\n            }\n            this.index += endIndex;\n            return {\n                startIndex: startIndex,\n                endIndex: this.index,\n                startRowIndex: startRowIndex,\n                endRowIndex: this.rowIndex,\n                nodeType: _variables.NODE_TYPE_TEXT,\n                text: text\n            };\n        }\n    }, {\n        key: 'readComment',\n        value: function readComment() {\n            var startIndex = this.index;\n            var startRowIndex = this.rowIndex;\n            this.index += 4;\n            var later = this.later();\n            var endIndex = later.indexOf('-->');\n            if (endIndex == -1) {\n                endIndex = later.length;\n            }\n            var text = later.substring(0, endIndex);\n            var rowSize = text.match(/\\r\\n|\\r|\\n/g);\n            if (rowSize) {\n                this.rowIndex += rowSize.length;\n            }\n            this.index = this.index + endIndex;\n            if (this.peek()) {\n                this.index += 3;\n            }\n            return {\n                startIndex: startIndex,\n                endIndex: this.index,\n                startRowIndex: startRowIndex,\n                endRowIndex: this.rowIndex,\n                nodeType: _variables.NODE_TYPE_COMMENT,\n                text: text\n            };\n        }\n    }, {\n        key: 'readText',\n        value: function readText() {\n            var startRowIndex = this.rowIndex;\n            var startIndex = this.index;\n            var text = '';\n            while (this.index < this.length) {\n                var ch = this.text.charAt(this.index);\n                if (this.isEmpty(ch)) {\n                    text += this.ignoreEmpty();\n                } else if (ch != '<') {\n                    text += ch;\n                    this.index++;\n                } else {\n                    break;\n                }\n            }\n            return {\n                startRowIndex: startRowIndex,\n                endRowIndex: this.rowIndex,\n                startIndex: startIndex,\n                endIndex: this.index,\n                nodeType: _variables.NODE_TYPE_TEXT,\n                text: text\n            };\n        }\n    }, {\n        key: 'readTag',\n        value: function readTag() {\n            var startRowIndex = this.rowIndex;\n            var startIndex = this.index;\n            var TEST_ODD_TAG_REG = new RegExp('^' + ODD_TAG_LIST.join('|') + '$');\n\n            var tagName = '';\n            var propertis = void 0;\n            var ch = void 0;\n            this.index++;\n            while (this.index < this.length) {\n                ch = this.text.charAt(this.index);\n\n                if (!this.isEmpty(ch)) {\n                    if (ch == '>' || ch == '/' && this.peek() == '>') {\n                        break;\n                    }\n                    tagName += ch;\n                    this.index++;\n                } else {\n                    propertis = this.readProperty();\n                }\n            }\n            var tag = {\n                startRowIndex: startRowIndex,\n                endRowIndex: this.rowIndex,\n                startIndex: startIndex,\n                endIndex: this.index,\n                nodeType: _variables.NODE_TYPE_ELEMENT,\n                tagName: tagName,\n                propertis: propertis || []\n            };\n            if (ch == '/') {\n                this.index += 2;\n                tag.endIndex += 2;\n                tag.beginTag = true;\n                tag.closeTag = true;\n            } else if (ch == '>') {\n                if (TEST_ODD_TAG_REG.test(tag.tagName)) {\n                    tag.closeTag = true;\n                    tag.beginTag = true;\n                } else if (tagName.charAt(0) == '/') {\n                    tag.closeTag = true;\n                    tag.tagName = tagName.substring(1, tagName.length);\n                } else {\n                    tag.beginTag = true;\n                }\n                this.index++;\n                tag.endIndex++;\n            } else {\n                throw xmlParseMinErr('regTag', '文档第{0}行第{1}位标签未正确关闭！', this.rowIndex, this.index - this.rowCharIndex);\n            }\n            return tag;\n        }\n    }, {\n        key: 'readProperty',\n        value: function readProperty() {\n            var propertis = [];\n            while (this.index < this.length) {\n                this.ignoreEmpty();\n                var startRowIndex = this.rowIndex;\n                var startIndex = this.index;\n                var ch = this.text.charAt(this.index);\n                if (ch == '>' || ch == '/' && this.peek() == '>') {\n                    break;\n                }\n                var property = {\n                    name: this.readPropertyKey()\n                };\n                ch = this.text.charAt(this.index);\n                if (ch == '=') {\n                    if (!this.isEmpty(this.peek())) {\n                        property.value = this.readPropertyValue();\n                    }\n                }\n                property.startRowIndex = startRowIndex;\n                property.endRowIndex = this.rowIndex;\n                property.startIndex = startIndex;\n                property.endIndex = this.index;\n                propertis.push(property);\n            }\n            return propertis;\n        }\n    }, {\n        key: 'readPropertyKey',\n        value: function readPropertyKey() {\n            var key = '';\n            while (this.index < this.length) {\n                var ch = this.text.charAt(this.index);\n                if (!this.isEmpty(ch) && ch != '=' && ch != '>') {\n                    if (ch == '/' && this.peek() == '>') {\n                        break;\n                    }\n                    key += ch;\n                    this.index++;\n                } else {\n                    break;\n                }\n            }\n            return key;\n        }\n    }, {\n        key: 'readPropertyValue',\n        value: function readPropertyValue() {\n            var value = '';\n            var escape = false;\n            var quote = this.peek();\n            if (quote == '\"' || quote == \"'\") {\n                this.index++;\n            }\n            this.index++;\n            while (this.index < this.length) {\n                var ch = this.text.charAt(this.index);\n                if (quote != '\"' && quote != \"'\" && this.isEmpty(ch)) {\n                    return value;\n                }\n                if (escape) {\n                    if (ch === 'u') {\n                        var hexCode = this.text.substring(this.index + 1, this.index + 5);\n                        if (/[\\da-f]{4}/i.test(hexCode)) {\n                            value += String.fromCharCode(parseInt(hexCode, 16));\n                            this.index += 4;\n                        } else {\n                            throw xmlParseMinErr('readPropertyValue', '转义\\\\{0}失败，或者\\\\{0}不是一个合法的nuicode字符', hexCode);\n                        }\n                    } else {\n                        this.index--;\n                        value += this.ignoreEmpty();\n                    }\n                    escape = false;\n                } else if (ch == '\\\\') {\n                    escape = true;\n                } else if (ch == quote && ch == '\"' || ch == \"'\") {\n                    this.index++;\n                    return value;\n                } else {\n                    value += ch;\n                }\n                this.index++;\n            }\n        }\n    }, {\n        key: 'later',\n        value: function later() {\n            return this.text.slice(this.index, this.length);\n        }\n    }, {\n        key: 'expect',\n        value: function expect(text) {\n            var entIndex = this.index + text.length;\n            return entIndex <= this.length ? text === this.text.slice(this.index, entIndex) : false;\n        }\n    }, {\n        key: 'isEmpty',\n        value: function isEmpty(text) {\n            return typeof text !== 'string' || text === ' ' || text === '\\n' || text === '\\r' || text === '\\t' || text === '\\v' || text === ' ';\n        }\n    }, {\n        key: 'ignoreEmpty',\n        value: function ignoreEmpty() {\n            var empty = '';\n            while (this.index < this.length) {\n                var ch = this.text.charAt(this.index);\n\n                if (!this.isEmpty(ch)) {\n                    break;\n                }\n                empty += ch;\n                this.index++;\n\n                if (ch == '\\r') {\n                    // Mac OS\n                    if (this.peek() == '\\n') {\n                        // linux,unix\n                        this.index++;\n                    }\n                    this.rowIndex++;\n                    this.rowCharIndex = this.index;\n                } else if (ch == '\\n') {\n                    // windows\n                    this.rowIndex++;\n                    this.rowCharIndex = this.index;\n                }\n            }\n            return empty;\n        }\n    }, {\n        key: 'peek',\n        value: function peek() {\n            var index = this.index + 1;\n            return index < this.length ? this.text.charAt(index) : false;\n        }\n    }]);\n\n    return XmlAst;\n}();\n\nexports.default = XmlAst;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 3 */
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = minErr;\nfunction minErr(module) {\n  return function (code, template) {\n    for (var _len = arguments.length, info = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      info[_key - 2] = arguments[_key];\n    }\n\n    var msg = '[' + (module ? module + ':' : '') + code + ']  ';\n    msg += template.replace(/\\{(\\d+)\\}/g, function (str, $1) {\n      return info[+$1] ? info[+$1] : str;\n    });\n\n    msg += '\\nhttp://www.TBjs.org?module=' + module + '&type=' + code;\n    return new Error(msg);\n  };\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvbW9kdWxlcy9lcnJvci5qcz8wNjVjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O2tCQUF3QixNO0FBQVQsU0FBUyxNQUFULENBQWdCLE1BQWhCLEVBQXdCO0FBQ3JDLFNBQU8sVUFBVSxJQUFWLEVBQWdCLFFBQWhCLEVBQW1DO0FBQUEsc0NBQU4sSUFBTTtBQUFOLFVBQU07QUFBQTs7QUFDeEMsUUFBSSxNQUFNLE9BQU8sU0FBUyxTQUFTLEdBQWxCLEdBQXdCLEVBQS9CLElBQXFDLElBQXJDLEdBQTRDLEtBQXREO0FBQ0EsV0FBTyxTQUFTLE9BQVQsQ0FBaUIsWUFBakIsRUFBK0IsVUFBVSxHQUFWLEVBQWUsRUFBZixFQUFtQjtBQUN2RCxhQUFPLEtBQUssQ0FBQyxFQUFOLElBQVksS0FBSyxDQUFDLEVBQU4sQ0FBWixHQUF3QixHQUEvQjtBQUNELEtBRk0sQ0FBUDs7QUFJQSxXQUFPLGtDQUFrQyxNQUFsQyxHQUEyQyxRQUEzQyxHQUFzRCxJQUE3RDtBQUNBLFdBQU8sSUFBSSxLQUFKLENBQVUsR0FBVixDQUFQO0FBQ0QsR0FSRDtBQVNEIiwiZmlsZSI6IjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtaW5FcnIobW9kdWxlKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoY29kZSwgdGVtcGxhdGUsIC4uLmluZm8pIHtcbiAgICBsZXQgbXNnID0gJ1snICsgKG1vZHVsZSA/IG1vZHVsZSArICc6JyA6ICcnKSArIGNvZGUgKyAnXSAgJztcbiAgICBtc2cgKz0gdGVtcGxhdGUucmVwbGFjZSgvXFx7KFxcZCspXFx9L2csIGZ1bmN0aW9uIChzdHIsICQxKSB7XG4gICAgICByZXR1cm4gaW5mb1srJDFdID8gaW5mb1srJDFdIDogc3RyO1xuICAgIH0pXG5cbiAgICBtc2cgKz0gJ1xcbmh0dHA6Ly93d3cuVEJqcy5vcmc/bW9kdWxlPScgKyBtb2R1bGUgKyAnJnR5cGU9JyArIGNvZGU7XG4gICAgcmV0dXJuIG5ldyBFcnJvcihtc2cpO1xuICB9XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9qcy9tb2R1bGVzL2Vycm9yLmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 4 */
/***/ function(module, exports) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar NODE_TYPE_ELEMENT = 1;\nvar NODE_TYPE_TEXT = 3;\nvar NODE_TYPE_COMMENT = 8;\nvar NODE_TYPE_DOCUMENT = 9;\nvar NODE_TYPE_DOCUMENTFRAGMENT = 11;\n\nexports.NODE_TYPE_ELEMENT = NODE_TYPE_ELEMENT;\nexports.NODE_TYPE_TEXT = NODE_TYPE_TEXT;\nexports.NODE_TYPE_COMMENT = NODE_TYPE_COMMENT;\nexports.NODE_TYPE_DOCUMENT = NODE_TYPE_DOCUMENT;\nexports.NODE_TYPE_DOCUMENTFRAGMENT = NODE_TYPE_DOCUMENTFRAGMENT;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvbW9kdWxlcy92YXJpYWJsZXMuanM/MDJkMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLElBQU0sb0JBQW9CLENBQTFCO0FBQ0EsSUFBTSxpQkFBaUIsQ0FBdkI7QUFDQSxJQUFNLG9CQUFvQixDQUExQjtBQUNBLElBQU0scUJBQXFCLENBQTNCO0FBQ0EsSUFBTSw2QkFBNkIsRUFBbkM7O1FBR0ksaUIsR0FBQSxpQjtRQUNBLGMsR0FBQSxjO1FBQ0EsaUIsR0FBQSxpQjtRQUNBLGtCLEdBQUEsa0I7UUFDQSwwQixHQUFBLDBCIiwiZmlsZSI6IjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBOT0RFX1RZUEVfRUxFTUVOVCA9IDE7XG5jb25zdCBOT0RFX1RZUEVfVEVYVCA9IDM7XG5jb25zdCBOT0RFX1RZUEVfQ09NTUVOVCA9IDg7XG5jb25zdCBOT0RFX1RZUEVfRE9DVU1FTlQgPSA5O1xuY29uc3QgTk9ERV9UWVBFX0RPQ1VNRU5URlJBR01FTlQgPSAxMTtcblxuZXhwb3J0IHtcbiAgICBOT0RFX1RZUEVfRUxFTUVOVCxcbiAgICBOT0RFX1RZUEVfVEVYVCxcbiAgICBOT0RFX1RZUEVfQ09NTUVOVCxcbiAgICBOT0RFX1RZUEVfRE9DVU1FTlQsXG4gICAgTk9ERV9UWVBFX0RPQ1VNRU5URlJBR01FTlRcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2pzL21vZHVsZXMvdmFyaWFibGVzLmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _public = __webpack_require__(6);\n\nvar _variables = __webpack_require__(4);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RootElement = function () {\n    function RootElement() {\n        _classCallCheck(this, RootElement);\n\n        this.$DOCTYPE = 'VIRTUAL_DOM';\n    }\n\n    _createClass(RootElement, [{\n        key: 'getInnerHtml',\n        value: function getInnerHtml() {\n            if (this.innerHTML) {\n                return this.innerHTML;\n            } else if (this.nodeType === _variables.NODE_TYPE_TEXT || this.nodeType === _variables.NODE_TYPE_COMMENT) {\n                return this.textContent;\n            }\n            var innerHTML = '';\n            if (this.childNodes) {\n                for (var i = 0, len = this.childNodes.length; i < len; i++) {\n                    innerHTML += this.childNodes[i].getOuterHtml();\n                }\n            }\n            this.innerHTML = innerHTML;\n            return innerHTML;\n        }\n    }, {\n        key: 'getOuterHtml',\n        value: function getOuterHtml() {\n            if (this.outerHTML) {\n                return this.outerHTML;\n            } else if (this.nodeType === _variables.NODE_TYPE_TEXT) {\n                return this.textContent;\n            } else if (this.nodeType === _variables.NODE_TYPE_COMMENT) {\n                return '<!--' + this.textContent + '-->';\n            }\n\n            var getAttributeHtml = function getAttributeHtml(attributes) {\n                var attrbutesList = [];\n                for (var i = 0, len = attributes.length; i < len; i++) {\n                    var item = attributes[i];\n                    var attr = item.name;\n                    if (attr === 'className') {\n                        attr = 'class';\n                    }\n                    if (item.value !== null && item.value !== undefined) {\n                        if (item.value.indexOf('\"') === -1) {\n                            attr = attr + '=\"' + item.value + '\"';\n                        } else {\n                            attr = attr + \"='\" + item.value + \"'\";\n                        }\n                    }\n                    attrbutesList.push(attr);\n                }\n                return attrbutesList.join(' ');\n            };\n\n            var getChildNodesHtml = function getChildNodesHtml(obj) {\n                var html = '';\n                for (var i = 0, len = obj.childNodes.length; i < len; i++) {\n                    html += obj.childNodes[i].getOuterHtml();\n                }\n                return html;\n            };\n\n            var outerHtml = '';\n            if (this.nodeType === _variables.NODE_TYPE_ELEMENT) {\n                var tagName = this.tagName.toLowerCase();\n                var attrHtml = getAttributeHtml(this.attributes);\n                if (ODD_TAG_LIST.indexOf(tagName) === -1) {\n                    outerHtml = '<' + tagName + (attrHtml ? ' ' + attrHtml : '') + '>' + getChildNodesHtml(this) + '</' + tagName + '>';\n                } else {\n                    outerHtml = '<' + tagName + ' ' + attrHtml + '>';\n                }\n            } else if (this.nodeType === _variables.NODE_TYPE_DOCUMENT) {\n                outerHtml = getChildNodesHtml(this);\n            }\n\n            this.outerHTML = outerHtml;\n            return outerHtml;\n        }\n    }, {\n        key: 'getInnerText',\n        value: function getInnerText() {\n            if (this.nodeType === _variables.NODE_TYPE_TEXT) {\n                return this.textContent;\n            } else if (this.nodeType === _variables.NODE_TYPE_COMMENT) {\n                return;\n            }\n            var text = '';\n            if (this.childNodes) {\n                //单标签没有子级\n                for (var i = 0, len = this.childNodes.length; i < len; i++) {\n                    text += this.childNodes[i].getInnerText() || '';\n                }\n            }\n            this.innerText = text;\n            return text;\n        }\n    }]);\n\n    return RootElement;\n}();\n\nvar ElementEvent = function (_RootElement) {\n    _inherits(ElementEvent, _RootElement);\n\n    function ElementEvent() {\n        _classCallCheck(this, ElementEvent);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(ElementEvent).apply(this, arguments));\n    }\n\n    _createClass(ElementEvent, [{\n        key: 'addEventListener',\n        value: function addEventListener(eventType, fn, useCapture) {\n            useCapture = !!useCapture;\n            eventType = eventType.toLowerCase();\n            if (!(0, _public.isArray)(this.eventListener[eventType])) {\n                this.eventListener[eventType] = [];\n            }\n            this.eventListener[eventType].push({\n                fn: fn,\n                useCapture: useCapture\n            });\n        }\n    }, {\n        key: 'removeEventListener',\n        value: function removeEventListener(eventType, fn) {\n            if ((0, _public.isArray)(this.eventListener[eventType])) {\n                for (var i = 0, len = this.eventListener.length; i < len; i++) {\n                    if (this.eventListener[i].fn === fn) {\n                        this.eventListener.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n        }\n    }]);\n\n    return ElementEvent;\n}(RootElement);\n\nvar Element = function (_ElementEvent) {\n    _inherits(Element, _ElementEvent);\n\n    function Element() {\n        _classCallCheck(this, Element);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(Element).apply(this, arguments));\n    }\n\n    _createClass(Element, [{\n        key: '$refresh',\n        value: function $refresh() {\n            this.innerHTML = this.outerHTML = this.innerText = '';\n            this.getOuterHtml();\n            this.getInnerHtml();\n            this.getInnerText();\n            if (this.parentNode) {\n                this.parentNode.$refresh();\n            }\n        }\n    }, {\n        key: 'setInnerHtml',\n        value: function setInnerHtml(arg) {\n            var newNodeElements = new DocumentElement(arg);\n            this.childNodes = [];\n            this.children = [];\n            for (var i = 0, len = newNodeElements.childNodes.length; i < len; i++) {\n                this.appendChild(newNodeElements.childNodes[i]);\n            }\n            newNodeElements = null;\n            this.$refresh();\n        }\n    }, {\n        key: 'setAttribute',\n        value: function setAttribute(attributes, value) {\n            var item = void 0;\n            for (var i = 0, len = this.attributes.length; i < len; i++) {\n                if (this.attributes[i].name === attributes) {\n                    item = this.attributes[i];\n                    break;\n                }\n            }\n            if (!item) {\n                item = {};\n                this.attributes.push(item);\n            }\n            item.name = attributes;\n            if (!(0, _public.isUndefined)(value)) {\n                item.value = value;\n            }\n            this.className = this.getAttribute('class');\n            this.classList = this.className.match(/\\S+/g) || [];\n            this.id = this.getAttribute('id');\n            this.$refresh();\n        }\n    }, {\n        key: 'getAttribute',\n        value: function getAttribute(key) {\n            for (var i = 0, len = this.attributes.length; i < len; i++) {\n                if (this.attributes[i].name === key) {\n                    return this.attributes[i].value;\n                }\n            }\n            return '';\n        }\n    }, {\n        key: 'hasAttribute',\n        value: function hasAttribute(key) {\n            for (var i = 0, len = this.attributes.length; i < len; i++) {\n                if (this.attributes[i].name === key) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    }, {\n        key: 'removeAttribute',\n        value: function removeAttribute(key) {\n            for (var i = 0, len = this.attributes.length; i < len; i++) {\n                if (this.attributes[i].name === key) {\n                    this.attributes.splice(i, 1);\n                    if (key === 'class') {\n                        this.className = '';\n                        this.classList = [];\n                    } else if (key === 'id') {\n                        this.id = '';\n                    }\n                    break;\n                }\n            }\n            this.$refresh();\n        }\n    }, {\n        key: 'querySelectorAll',\n        value: function querySelectorAll(selector) {\n            selector = ' ' + (0, _public.trim)(selector);\n            var _this = this;\n            var elements = [];\n\n            var ALL_SELECTOR_REG = /^\\s+\\*?(?!>|\\[|:first-child|:last-child|\\+)/;\n            var TAG_SELECTOR_REG = /^(\\w+(?:-\\w+)*)/;\n            var ID_SELECTOR_REG = /^#(\\w+(?:-\\w+)*)/;\n            var CLASSNAME_SELECTOR_REG = /^\\.(\\w+(?:-\\w+)*)/;\n            var ATTRIBUTE_SELECTOR_REG = /^\\s*\\[\\s*(\\w+(?:-\\w+)*)(?:\\s*=\\s*(['\"]?)([^\\2]*)\\2?\\s*)?\\]/;\n            var CHILDREN_SELECTOR_RGE = /^\\s*>/;\n            var FIRST_SELECTOR_REG = /^\\s*:first-child\\b/;\n            var LAST_SELECTOR_REG = /^\\s*:last-child\\b/;\n            var SIBLINGS_SELECTOR_REG = /^\\+\\s*/;\n\n            function selectDistributor(selector, context) {\n\n                var parentElements = [];\n                var nextSelector = '';\n\n                var _loop = function _loop(_i, len) {\n                    var currentElement = context[_i];\n                    if (ALL_SELECTOR_REG.test(selector)) {\n                        nextSelector = selector.replace(ALL_SELECTOR_REG, function () {\n                            currentElement.getElementsByTagName('*').filter(function (item) {\n                                parentElements.push(item);\n                            });\n                            return '';\n                        });\n                    } else if (TAG_SELECTOR_REG.test(selector)) {\n                        nextSelector = selector.replace(TAG_SELECTOR_REG, function (selector, tagName) {\n                            if (currentElement.tagName === tagName.toUpperCase()) {\n                                parentElements.push(currentElement);\n                            }\n                            return '';\n                        });\n                    } else if (ID_SELECTOR_REG.test(selector)) {\n                        nextSelector = selector.replace(ID_SELECTOR_REG, function (selector, id) {\n                            if (currentElement.id === id) {\n                                parentElements.push(currentElement);\n                            }\n                            return '';\n                        });\n                    } else if (CLASSNAME_SELECTOR_REG.test(selector)) {\n                        nextSelector = selector.replace(CLASSNAME_SELECTOR_REG, function (selector, className) {\n                            var reg = new RegExp('(^|\\\\s+)' + className + '(\\\\s+|$)');\n                            if (reg.test(currentElement.className)) {\n                                parentElements.push(currentElement);\n                            }\n                            return '';\n                        });\n                    } else if (ATTRIBUTE_SELECTOR_REG.test(selector)) {\n                        nextSelector = selector.replace(ATTRIBUTE_SELECTOR_REG, function (selector, propName, _, propValue) {\n                            if (propValue) {\n                                if (currentElement.getAttribute(propName) === propValue) {\n                                    parentElements.push(currentElement);\n                                }\n                            } else {\n                                if (currentElement.hasAttribute(propName)) {\n                                    parentElements.push(currentElement);\n                                }\n                            }\n                            return '';\n                        });\n                    } else if (CHILDREN_SELECTOR_RGE.test(selector)) {\n                        nextSelector = selector.replace(CHILDREN_SELECTOR_RGE, function () {\n                            if (!currentElement.children) return '';\n                            for (var j = 0, _len = currentElement.children.length; j < _len; j++) {\n                                parentElements.push(currentElement.children[j]);\n                            }\n                            return '';\n                        });\n                    } else if (FIRST_SELECTOR_REG.test(selector)) {\n                        nextSelector = selector.replace(FIRST_SELECTOR_REG, function () {\n                            parentElements.push(currentElement);\n                            _i = len;\n                            return '';\n                        });\n                    } else if (LAST_SELECTOR_REG.test(selector)) {\n                        nextSelector = selector.replace(LAST_SELECTOR_REG, function () {\n                            parentElements.push(context[len - 1]);\n                            _i = len;\n                            return '';\n                        });\n                    } else if (SIBLINGS_SELECTOR_REG.test(selector)) {\n                        nextSelector = selector.replace(SIBLINGS_SELECTOR_REG, function () {\n                            var siblings = currentElement.parentNode.children;\n                            siblings.filter(function (item) {\n                                if (item !== currentElement) {\n                                    parentElements.push(item);\n                                }\n                            });\n                            return '';\n                        });\n                    }\n\n                    i = _i;\n                };\n\n                for (var i = 0, len = context.length; i < len; i++) {\n                    _loop(i, len);\n                }\n                if (selector === nextSelector) {\n                    throw xmlMinErr('qureySelectorAll', '{0}不是一个正确的选择器！', selector);\n                }\n                parentElements = (0, _public.unique)(parentElements);\n                if (nextSelector) {\n                    return selectDistributor(nextSelector, parentElements);\n                }\n                return parentElements;\n            }\n            return selectDistributor(selector, [this]);\n        }\n    }, {\n        key: 'querySelector',\n        value: function querySelector(selector) {\n            return this.querySelectorAll(selector)[0] || null;\n        }\n    }]);\n\n    return Element;\n}(ElementEvent);\n\nvar ElementMethod = function (_Element) {\n    _inherits(ElementMethod, _Element);\n\n    function ElementMethod() {\n        _classCallCheck(this, ElementMethod);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(ElementMethod).apply(this, arguments));\n    }\n\n    _createClass(ElementMethod, [{\n        key: 'getElementsByTagName',\n        value: function getElementsByTagName(tagName) {\n            tagName = (0, _public.trim)(tagName);\n            var elements = [];\n            for (var i = 0, len = this.children.length; i < len; i++) {\n                if (this.children[i].tagName === tagName || tagName === '*') {\n                    elements.push(this.children[i]);\n                }\n                if (this.children[i].children) {\n                    this.children[i].getElementsByTagName(tagName).filter(function (item) {\n                        elements.push(item);\n                    });\n                }\n            }\n            return elements;\n        }\n    }, {\n        key: 'getElementsByClassName',\n        value: function getElementsByClassName(className) {\n            var elements = [];\n            for (var i = 0, len = this.children.length; i < len; i++) {\n                if (this.children[i].hasClass(className)) {\n                    elements.push(this.children[i]);\n                }\n                if (this.children[i].children) {\n                    this.children[i].getElementsByClassName(className).filter(function (item) {\n                        elements.push(item);\n                    });\n                }\n            }\n            return elements;\n        }\n    }, {\n        key: 'appendChild',\n        value: function appendChild(TBDomElement) {\n            if (TBDomElement.parentNode !== this) {\n                TBDomElement.parentNode = this;\n                this.childNodes.push(TBDomElement);\n                if (TBDomElement.nodeType === _variables.NODE_TYPE_ELEMENT) {\n                    this.children.push(TBDomElement);\n                }\n            } else {\n                for (var i = 0, len = this.childNodes.length; i < len; i++) {\n                    if (TBDomElement === this.childNodes[i]) {\n                        this.childNodes.push(this.childNodes.splice(i, 1));\n                        break;\n                    }\n                }\n                if (TBDomElement.nodeType === _variables.NODE_TYPE_ELEMENT) {\n                    for (var _i2 = 0, _len2 = this.children.length; _i2 < _len2; _i2++) {\n                        if (TBDomElement === this.children[_i2]) {\n                            this.children.push(this.children.splice(_i2, 1));\n                            break;\n                        }\n                    }\n                }\n            }\n            this.$refresh();\n        }\n    }, {\n        key: 'removeChild',\n        value: function removeChild(TBDomElement) {\n            for (var i = 0, len = this.childNodes.length; i < len; i++) {\n                if (this.childNodes[i] === TBDomElement) {\n                    this.childNodes.splice(i, 1);\n                    break;\n                }\n            }\n            if (TBDomElement.nodeType === _variables.NODE_TYPE_ELEMENT) {\n                for (var _i3 = 0, _len3 = this.children.length; _i3 < _len3; _i3++) {\n                    if (this.children[_i3] === TBDomElement) {\n                        this.children.splice(_i3, 1);\n                        break;\n                    }\n                }\n            }\n            this.$refresh();\n        }\n    }, {\n        key: 'insertBefore',\n        value: function insertBefore(TBDomElement, nextElement) {\n            var parentNode = TBDomElement.parentNode;\n            for (var i = 0, len = parentNode.childNodes.length; i < len; i++) {\n                if (parentNode.childNodes[i] === TBDomElement) {\n                    parentNode.childNodes.splice(i, 1);\n                    break;\n                }\n            }\n            for (var _i4 = 0, _len4 = parentNode.children.length; _i4 < _len4; _i4++) {\n                if (parentNode.children[_i4] === TBDomElement) {\n                    parentNode.children.splice(_i4, 1);\n                    break;\n                }\n            }\n            TBDomElement.parentNode = this;\n            for (var _i5 = 0, _len5 = this.childNodes.length; _i5 < _len5; _i5++) {\n                if (this.childNodes[_i5] === nextElement) {\n                    this.childNodes.splice(_i5, 0, TBDomElement);\n                    break;\n                }\n            }\n            for (var _i6 = 0, _len6 = this.children.length; _i6 < _len6; _i6++) {\n                if (this.children[_i6] === nextElement) {\n                    this.children.splice(_i6, 0, TBDomElement);\n                    break;\n                }\n            }\n            this.$refresh();\n        }\n    }]);\n\n    return ElementMethod;\n}(Element);\n\nvar DocumentElement = function (_ElementMethod) {\n    _inherits(DocumentElement, _ElementMethod);\n\n    function DocumentElement() {\n        var _Object$getPrototypeO;\n\n        _classCallCheck(this, DocumentElement);\n\n        for (var _len7 = arguments.length, args = Array(_len7), _key = 0; _key < _len7; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this5 = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(DocumentElement)).call.apply(_Object$getPrototypeO, [this].concat(args)));\n\n        _this5.$targetElement = null;\n        _this5.nodeType = _variables.NODE_TYPE_DOCUMENT;\n        _this5.parentNode = null;\n        _this5.innerHTML = '';\n        _this5.innerText = '';\n        _this5.outerHTML = '';\n        _this5.classList = [];\n        _this5.className = '';\n        _this5.childNodes = [];\n        _this5.children = [];\n        _this5.eventListener = {};\n        return _this5;\n    }\n\n    _createClass(DocumentElement, [{\n        key: 'createElement',\n        value: function createElement(tag) {\n            tag = tag.toLowerCase();\n            if (ODD_TAG_LIST.indexOf(tag) === -1) {\n                return new EvenElement(tag);\n            }\n            return new OddElement(tag);\n        }\n    }, {\n        key: 'createTextNode',\n        value: function createTextNode(text) {\n            return new TextElement(text);\n        }\n    }, {\n        key: 'createComment',\n        value: function createComment(commentText) {\n            return new CommentElement(commentText);\n        }\n    }, {\n        key: 'getElementById',\n        value: function getElementById(id) {\n            function getElementById(parent) {\n                var element = null;\n                var children = parent.children || [];\n                for (var i = 0, len = children.length; i < len; i++) {\n                    if (children[i].id === id) {\n                        return children[i];\n                    } else {\n                        element = getElementById(children[i]);\n                        if (element) return element;\n                    }\n                }\n                return element;\n            }\n            return getElementById(this);\n        }\n    }, {\n        key: 'getElementsByName',\n        value: function getElementsByName(name) {\n            var elements = [];\n            this.getElementsByTagName('form').filter(function (item) {\n                if (item.hasAttribute(name)) {\n                    elements.push(item);\n                }\n            });\n            return elements;\n        }\n    }]);\n\n    return DocumentElement;\n}(ElementMethod);\n\nvar OddElement = function (_Element2) {\n    _inherits(OddElement, _Element2);\n\n    function OddElement(tagName) {\n        _classCallCheck(this, OddElement);\n\n        var _this6 = _possibleConstructorReturn(this, Object.getPrototypeOf(OddElement).call(this));\n\n        _this6.$targetElement = null;\n        _this6.tagName = _this6.nodeName = tagName.toUpperCase();\n        _this6.nodeType = _variables.NODE_TYPE_ELEMENT;\n        _this6.parentNode = null;\n        _this6.innerHTML = '';\n        _this6.innerText = '';\n        _this6.id = '';\n        _this6.outerHTML = '';\n        _this6.classList = [];\n        _this6.className = '';\n        _this6.attributes = [];\n        _this6.eventListener = {};\n        return _this6;\n    }\n\n    return OddElement;\n}(Element);\n\nvar EvenElement = function (_ElementMethod2) {\n    _inherits(EvenElement, _ElementMethod2);\n\n    function EvenElement(tagName) {\n        _classCallCheck(this, EvenElement);\n\n        var _this7 = _possibleConstructorReturn(this, Object.getPrototypeOf(EvenElement).call(this));\n\n        _this7.$targetElement = null;\n        _this7.tagName = _this7.nodeName = tagName.toUpperCase();\n        _this7.nodeType = _variables.NODE_TYPE_ELEMENT;\n        _this7.parentNode = null;\n        _this7.innerHTML = '';\n        _this7.innerText = '';\n        _this7.outerHTML = '';\n        _this7.classList = [];\n        _this7.className = '';\n        _this7.id = '';\n        _this7.childNodes = [];\n        _this7.children = [];\n        _this7.attributes = [];\n        _this7.eventListener = {};\n        return _this7;\n    }\n\n    return EvenElement;\n}(ElementMethod);\n\nvar TextElement = function (_ElementEvent2) {\n    _inherits(TextElement, _ElementEvent2);\n\n    function TextElement(text) {\n        _classCallCheck(this, TextElement);\n\n        var _this8 = _possibleConstructorReturn(this, Object.getPrototypeOf(TextElement).call(this));\n\n        _this8.$targetElement = null;\n        _this8.parentNode = null;\n        _this8.nodeType = _variables.NODE_TYPE_TEXT;\n        _this8.nodeName = '#text';\n        _this8.textContent = text.replace(/[\\n\\t\\r\\v]/g, '');\n        _this8.eventListener = {};\n        return _this8;\n    }\n\n    return TextElement;\n}(ElementEvent);\n\nvar CommentElement = function (_RootElement2) {\n    _inherits(CommentElement, _RootElement2);\n\n    function CommentElement(commentText) {\n        _classCallCheck(this, CommentElement);\n\n        var _this9 = _possibleConstructorReturn(this, Object.getPrototypeOf(CommentElement).call(this));\n\n        _this9.$targetElement = null;\n        _this9.parentNode = null;\n        _this9.nodeType = _variables.NODE_TYPE_COMMENT;\n        _this9.nodeName = '#comment';\n        _this9.textContent = commentText;\n        return _this9;\n    }\n\n    return CommentElement;\n}(RootElement);\n\nexports.default = DocumentElement;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 6 */
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction noop() {}\n\nfunction isType(type) {\n    return function (obj) {\n        return {}.toString.call(obj) == '[object ' + type + ']';\n    };\n};\nvar isObject = isType('Object');\nvar isString = isType('String');\nvar isArray = Array.isArray || isType('Array');\nvar isFunction = isType('Function');\nvar isUndefined = isType('Undefined');\nvar isNumber = function isNumber(val) {\n    return typeof val === 'number';\n};\n\nfunction isEmpty(str) {\n    return (/^[\\s\\t\\n\\r\\v]$/gm.test(str)\n    );\n}\n\nfunction trim(str) {\n    return str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction forEach(arr, fn) {\n    for (var i = 0, len = arr.length; i < len; i++) {\n        fn(arr[i]);\n    }\n}\n\nfunction unique(arr) {\n    if (arr.length < 2) {\n        return arr;\n    }\n    var result = [arr[0]];\n    var noRepeat = true;\n    for (var i = 1, len = arr.length; i < len; i++) {\n        for (var j = 0, len2 = result.length; j < len2; j++) {\n            if (result[j] === arr[i]) {\n                noRepeat = false;\n            }\n        }\n        if (noRepeat) {\n            result.push(arr[i]);\n            noRepeat = true;\n        }\n    }\n    return result;\n}\n\nexports.isObject = isObject;\nexports.isString = isString;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isUndefined = isUndefined;\nexports.isNumber = isNumber;\nexports.isEmpty = isEmpty;\nexports.trim = trim;\nexports.forEach = forEach;\nexports.unique = unique;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvbW9kdWxlcy9wdWJsaWMuanM/MTZkYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLFNBQVMsSUFBVCxHQUFnQixDQUFFOztBQUVsQixTQUFTLE1BQVQsQ0FBZ0IsSUFBaEIsRUFBc0I7QUFDbEIsV0FBTyxVQUFVLEdBQVYsRUFBZTtBQUNsQixlQUFPLEdBQUcsUUFBSCxDQUFZLElBQVosQ0FBaUIsR0FBakIsS0FBeUIsYUFBYSxJQUFiLEdBQW9CLEdBQXBEO0FBQ0gsS0FGRDtBQUdIO0FBQ0QsSUFBSSxXQUFXLE9BQU8sUUFBUCxDQUFmO0FBQ0EsSUFBSSxXQUFXLE9BQU8sUUFBUCxDQUFmO0FBQ0EsSUFBSSxVQUFVLE1BQU0sT0FBTixJQUFpQixPQUFPLE9BQVAsQ0FBL0I7QUFDQSxJQUFJLGFBQWEsT0FBTyxVQUFQLENBQWpCO0FBQ0EsSUFBSSxjQUFjLE9BQU8sV0FBUCxDQUFsQjtBQUNBLElBQUksV0FBVyxTQUFYLFFBQVcsQ0FBVSxHQUFWLEVBQWU7QUFDMUIsV0FBTyxPQUFPLEdBQVAsS0FBZSxRQUF0QjtBQUNILENBRkQ7O0FBSUEsU0FBUyxPQUFULENBQWlCLEdBQWpCLEVBQXNCO0FBQ2xCLFdBQU8sb0JBQW1CLElBQW5CLENBQXdCLEdBQXhCO0FBQVA7QUFDSDs7QUFFRCxTQUFTLElBQVQsQ0FBYyxHQUFkLEVBQW1CO0FBQ2YsV0FBTyxJQUFJLE9BQUosQ0FBWSxZQUFaLEVBQTBCLEVBQTFCLENBQVA7QUFDSDs7QUFFRCxTQUFTLE9BQVQsQ0FBaUIsR0FBakIsRUFBc0IsRUFBdEIsRUFBMEI7QUFDdEIsU0FBSyxJQUFJLElBQUksQ0FBUixFQUFXLE1BQU0sSUFBSSxNQUExQixFQUFrQyxJQUFJLEdBQXRDLEVBQTJDLEdBQTNDLEVBQWdEO0FBQzVDLFdBQUcsSUFBSSxDQUFKLENBQUg7QUFDSDtBQUNKOztBQUVELFNBQVMsTUFBVCxDQUFnQixHQUFoQixFQUFxQjtBQUNqQixRQUFJLElBQUksTUFBSixHQUFhLENBQWpCLEVBQW9CO0FBQ2hCLGVBQU8sR0FBUDtBQUNIO0FBQ0QsUUFBSSxTQUFTLENBQUMsSUFBSSxDQUFKLENBQUQsQ0FBYjtBQUNBLFFBQUksV0FBVyxJQUFmO0FBQ0EsU0FBSyxJQUFJLElBQUksQ0FBUixFQUFXLE1BQU0sSUFBSSxNQUExQixFQUFrQyxJQUFJLEdBQXRDLEVBQTJDLEdBQTNDLEVBQWdEO0FBQzVDLGFBQUssSUFBSSxJQUFJLENBQVIsRUFBVyxPQUFPLE9BQU8sTUFBOUIsRUFBc0MsSUFBSSxJQUExQyxFQUFnRCxHQUFoRCxFQUFxRDtBQUNqRCxnQkFBSSxPQUFPLENBQVAsTUFBYyxJQUFJLENBQUosQ0FBbEIsRUFBMEI7QUFDdEIsMkJBQVcsS0FBWDtBQUNIO0FBQ0o7QUFDRCxZQUFJLFFBQUosRUFBYztBQUNWLG1CQUFPLElBQVAsQ0FBWSxJQUFJLENBQUosQ0FBWjtBQUNBLHVCQUFXLElBQVg7QUFDSDtBQUNKO0FBQ0QsV0FBTyxNQUFQO0FBQ0g7O1FBR0csUSxHQUFBLFE7UUFDQSxRLEdBQUEsUTtRQUNBLE8sR0FBQSxPO1FBQ0EsVSxHQUFBLFU7UUFDQSxXLEdBQUEsVztRQUNBLFEsR0FBQSxRO1FBQ0EsTyxHQUFBLE87UUFDQSxJLEdBQUEsSTtRQUNBLE8sR0FBQSxPO1FBQ0EsTSxHQUFBLE0iLCJmaWxlIjoiNi5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5mdW5jdGlvbiBpc1R5cGUodHlwZSkge1xuICAgIHJldHVybiBmdW5jdGlvbiAob2JqKSB7XG4gICAgICAgIHJldHVybiB7fS50b1N0cmluZy5jYWxsKG9iaikgPT0gJ1tvYmplY3QgJyArIHR5cGUgKyAnXSc7XG4gICAgfVxufTtcbmxldCBpc09iamVjdCA9IGlzVHlwZSgnT2JqZWN0Jyk7XG5sZXQgaXNTdHJpbmcgPSBpc1R5cGUoJ1N0cmluZycpO1xubGV0IGlzQXJyYXkgPSBBcnJheS5pc0FycmF5IHx8IGlzVHlwZSgnQXJyYXknKTtcbmxldCBpc0Z1bmN0aW9uID0gaXNUeXBlKCdGdW5jdGlvbicpO1xubGV0IGlzVW5kZWZpbmVkID0gaXNUeXBlKCdVbmRlZmluZWQnKTtcbmxldCBpc051bWJlciA9IGZ1bmN0aW9uICh2YWwpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbCA9PT0gJ251bWJlcic7XG59O1xuXG5mdW5jdGlvbiBpc0VtcHR5KHN0cikge1xuICAgIHJldHVybiAvXltcXHNcXHRcXG5cXHJcXHZdJC9nbS50ZXN0KHN0cik7XG59XG5cbmZ1bmN0aW9uIHRyaW0oc3RyKSB7XG4gICAgcmV0dXJuIHN0ci5yZXBsYWNlKC9eXFxzK3xcXHMrJC9nLCAnJyk7XG59XG5cbmZ1bmN0aW9uIGZvckVhY2goYXJyLCBmbikge1xuICAgIGZvciAobGV0IGkgPSAwLCBsZW4gPSBhcnIubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgZm4oYXJyW2ldKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIHVuaXF1ZShhcnIpIHtcbiAgICBpZiAoYXJyLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgcmV0dXJuIGFycjtcbiAgICB9XG4gICAgbGV0IHJlc3VsdCA9IFthcnJbMF1dO1xuICAgIGxldCBub1JlcGVhdCA9IHRydWU7XG4gICAgZm9yIChsZXQgaSA9IDEsIGxlbiA9IGFyci5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICBmb3IgKGxldCBqID0gMCwgbGVuMiA9IHJlc3VsdC5sZW5ndGg7IGogPCBsZW4yOyBqKyspIHtcbiAgICAgICAgICAgIGlmIChyZXN1bHRbal0gPT09IGFycltpXSkge1xuICAgICAgICAgICAgICAgIG5vUmVwZWF0ID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG5vUmVwZWF0KSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaChhcnJbaV0pO1xuICAgICAgICAgICAgbm9SZXBlYXQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCB7XG4gICAgaXNPYmplY3QsXG4gICAgaXNTdHJpbmcsXG4gICAgaXNBcnJheSxcbiAgICBpc0Z1bmN0aW9uLFxuICAgIGlzVW5kZWZpbmVkLFxuICAgIGlzTnVtYmVyLFxuICAgIGlzRW1wdHksXG4gICAgdHJpbSxcbiAgICBmb3JFYWNoLFxuICAgIHVuaXF1ZVxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvanMvbW9kdWxlcy9wdWJsaWMuanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ }
/******/ ]);
